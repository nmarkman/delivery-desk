// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://osywqypaamxxqlgnvgqw.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9zeXdxeXBhYW14eHFsZ252Z3F3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM1NDU0NjEsImV4cCI6MjA2OTEyMTQ2MX0.SFAxwPYqVhsFcjQ_Ma6LGWRxKgB1URvrX3s-8kF6TCA";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Enable debug logging for troubleshooting
const DEBUG_SUPABASE = true;

function logSupabaseEvent(event: string, details?: unknown) {
  if (DEBUG_SUPABASE) {
    const timestamp = new Date().toISOString();
    console.log(`[Supabase ${timestamp}] ${event}`, details || '');
  }
}

logSupabaseEvent('CLIENT_INIT', {
  url: SUPABASE_URL,
  multiTab: false,
  timestamp: Date.now()
});

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  },
  global: {
    headers: {
      'X-Client-Info': 'delivery-desk'
    }
  },
  db: {
    schema: 'public'
  },
  multiTab: false // Disable multi-tab support to prevent session conflicts
});

// Add auth state change listener for debugging
supabase.auth.onAuthStateChange((event, session) => {
  logSupabaseEvent('AUTH_STATE_CHANGE', {
    event,
    hasSession: !!session,
    userId: session?.user?.id,
    expiresAt: session?.expires_at,
    accessTokenPreview: session?.access_token ? session.access_token.substring(0, 20) + '...' : null
  });
});